#BlueJ class context
comment0.params=
comment0.target=RingStructure()
comment0.text=\r\n\ Default\ constructor\ instantiates\ an\ empty\ buffer.\r\n
comment1.params=items
comment1.target=RingStructure(java.lang.Object[])
comment1.text=\r\n\ Second\ constructor\ takes\ an\ item\ or\ a\ series\ of\ items\ to\ add\ to\ the\ new\ buffer.\r\n\ @param\ items\ list\ of\ items\ to\ add\ to\ the\ buffer.\r\n
comment10.params=
comment10.target=void\ clear()
comment10.text=\r\n\ Clears\ the\ buffer.\r\n
comment11.params=item
comment11.target=int\ search(java.lang.Object)
comment11.text=\r\n\ Searches\ the\ array\ for\ the\ given\ item\ and\ returns\ how\ far\ away\ it\ is\ in\ the\ forward\ direction.\r\n\ @return\ the\ number\ of\ places\ forward\ away\ from\ the\ current\ node\ the\ search\ item\ is,\ -1\ if\ not\ in\ the\ list.\r\n
comment12.params=item
comment12.target=int\ searchForward(java.lang.Object)
comment12.text=\r\n\ Searches\ the\ array\ for\ the\ given\ item\ and\ returns\ how\ far\ away\ it\ is\ in\ the\ forward\ direction.\r\n\ @return\ the\ number\ of\ places\ forward\ away\ from\ the\ current\ node\ the\ search\ item\ is,\ -1\ if\ not\ in\ the\ list.\r\n
comment13.params=item
comment13.target=int\ searchBackward(java.lang.Object)
comment13.text=\r\n\ Searches\ the\ array\ for\ the\ given\ item\ and\ returns\ how\ far\ away\ it\ is\ in\ the\ backward\ direction.\r\n\ @return\ the\ number\ of\ places\ backward\ away\ from\ the\ current\ node\ the\ search\ item\ is,\ -1\ if\ not\ in\ the\ list.\r\n
comment14.params=
comment14.target=void\ forward()
comment14.text=\r\n\ Moves\ the\ buffer\ forward\ one\ step.\r\n
comment15.params=
comment15.target=void\ backward()
comment15.text=\r\n\ Moves\ the\ buffer\ backward\ one\ step.\r\n
comment16.params=
comment16.target=java.lang.Object\ get()
comment16.text=\r\n\ Returns\ the\ current\ item.\r\n\ @return\ data\ of\ the\ current\ place\ in\ the\ buffer.\r\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\r\n\ Overrides\ object's\ toString\r\n\ @return\ a\ string\ representation\ of\ this\ list.\r\n
comment2.params=item
comment2.target=void\ add(java.lang.Object)
comment2.text=\r\n\ Adds\ the\ specified\ item\ after\ the\ current\ item.\r\n\ @param\ item\ to\ be\ added\ to\ the\ buffer.\r\n
comment3.params=item
comment3.target=void\ addAfter(java.lang.Object)
comment3.text=\r\n\ Adds\ the\ specified\ item\ after\ the\ current\ item.\r\n\ @param\ item\ to\ be\ added\ to\ the\ buffer.\r\n
comment4.params=item
comment4.target=void\ addBefore(java.lang.Object)
comment4.text=\r\n\ Adds\ the\ specified\ item\ before\ the\ current\ item.\r\n\ @param\ item\ to\ be\ added\ to\ the\ buffer.\r\n
comment5.params=items
comment5.target=void\ addAll(java.lang.Object[])
comment5.text=\r\n\ Adds\ the\ list\ of\ items\ after\ the\ current\ node.\r\n\ @param\ items\ list\ of\ items\ to\ be\ added\ to\ the\ buffer.\r\n
comment6.params=
comment6.target=java.lang.Object\ remove()
comment6.text=\r\n\ Removes\ the\ current\ node\ from\ the\ buffer\ and\ returns\ its\ contents.<P>\r\n\ This\ has\ the\ effect\ of\ moving\ forward\ as\ well.\r\n\ @return\ contents\ of\ the\ previous\ current\ node.\r\n
comment7.params=
comment7.target=java.lang.Object\ removeForward()
comment7.text=\r\n\ Removes\ the\ current\ node\ from\ the\ buffer\ and\ moves\ forward.\r\n\ @return\ contents\ of\ the\ previous\ current\ node.\r\n
comment8.params=
comment8.target=java.lang.Object\ removeBackward()
comment8.text=\r\n\ Removes\ the\ current\ node\ from\ the\ buffer\ and\ moves\ backward.\r\n\ @return\ contents\ of\ the\ previous\ current\ node.\r\n
comment9.params=
comment9.target=boolean\ isEmtpy()
comment9.text=\r\n\ Gets\ if\ the\ buffer\ is\ empty\ or\ not.\r\n\ @return\ if\ the\ list\ is\ empty.\r\n
numComments=18
