#BlueJ class context
comment0.params=
comment0.target=Stack()
comment0.text=\n\ Default\ constructor\ instantiates\ an\ empty\ stack.\n
comment1.params=items
comment1.target=Stack(java.lang.Object[])
comment1.text=\n\ Second\ constructor\ takes\ an\ item\ or\ a\ series\ of\ items\ to\ add\ to\ the\ new\ stack.\n\ @param\ items\ list\ of\ items\ to\ add\ to\ the\ stack.\n
comment2.params=item
comment2.target=void\ push(java.lang.Object)
comment2.text=\n\ Adds\ the\ specified\ item\ to\ the\ top\ of\ the\ stack.\n\ @param\ item\ to\ be\ added\ to\ the\ stack.\n
comment3.params=items
comment3.target=void\ pushAll(java.lang.Object[])
comment3.text=\n\ Adds\ the\ list\ of\ items\ to\ the\ stack\ in\ the\ order\ of\ the\ list.\n\ @param\ items\ list\ of\ items\ to\ be\ added.\n
comment4.params=
comment4.target=java.lang.Object\ pop()
comment4.text=\n\ Removes\ the\ item\ on\ top\ of\ the\ stack\ and\ returns\ it.\n\ @return\ the\ item\ that\ was\ on\ the\ top\ of\ the\ stack.\n
comment5.params=
comment5.target=java.lang.Object\ peek()
comment5.text=\n\ Reveals\ the\ item\ on\ the\ top\ of\ the\ stack\ without\ removing\ it.\n\ @return\ the\ item\ currently\ on\ the\ top\ of\ the\ stack.\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\ Gets\ if\ the\ stack\ is\ empty\ or\ not.\n\ @return\ if\ the\ list\ is\ empty.\n
comment7.params=
comment7.target=void\ clear()
comment7.text=\n\ Clears\ the\ stack.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Overrides\ object's\ toString.\n\ @return\ a\ string\ representation\ of\ this\ stack.\n
numComments=9
