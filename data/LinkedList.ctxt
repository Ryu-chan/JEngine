#BlueJ class context
comment0.params=
comment0.target=LinkedList()
comment0.text=\n\ Default\ constructor\ instantiates\ an\ empty\ list.\n
comment1.params=items
comment1.target=LinkedList(java.lang.Object[])
comment1.text=\n\ Second\ constructor\ takes\ an\ item\ or\ a\ series\ of\ items\ to\ add\ to\ the\ new\ list.\n\ @param\ items\ list\ of\ items\ to\ add\ to\ this\ list\n
comment10.params=start\ length
comment10.target=java.lang.Object[]\ removeRange(int,\ int)
comment10.text=\n\ Removes\ the\ specified\ range\ of\ items\ from\ the\ list.\n\ @param\ start\ index\ to\ start\ the\ range\ from.\n\ @param\ length\ how\ many\ items\ should\ be\ removed.\n\ @return\ an\ array\ of\ the\ specified\ length\ with\ the\ removed\ items\ in\ it.\n
comment11.params=
comment11.target=boolean\ isEmpty()
comment11.text=\n\ Gets\ if\ the\ list\ is\ empty\ or\ not.\n\ @return\ if\ the\ list\ is\ empty.\n
comment12.params=
comment12.target=int\ size()
comment12.text=\n\ Gets\ the\ size\ of\ the\ list.\n\ @return\ the\ size\ of\ the\ list.\n
comment13.params=
comment13.target=void\ clear()
comment13.text=\n\ Clears\ the\ list.\n
comment14.params=item
comment14.target=boolean\ contains(java.lang.Object)
comment14.text=\n\ Returns\ if\ the\ specified\ item\ occurs\ in\ the\ list.\n\ @param\ item\ which\ item\ to\ look\ for.\n\ @return\ if\ the\ item\ occurs\ in\ the\ list.\n
comment15.params=item
comment15.target=int\ indexOf(java.lang.Object)
comment15.text=\n\ Gets\ the\ index\ of\ the\ specified\ item\ if\ it\ exists.\n\ @param\ item\ which\ item\ to\ find\ the\ index\ of.\n\ @return\ the\ index\ of\ the\ item\ or\ -1.\n
comment16.params=item
comment16.target=int\ lastIndexOf(java.lang.Object)
comment16.text=\n\ Gets\ the\ last\ index\ of\ the\ specified\ item.\n\ @param\ item\ which\ item\ to\ find\ the\ last\ index\ of.\n\ @return\ the\ last\ index\ of\ the\ item\ or\ -1.\n
comment17.params=index
comment17.target=java.lang.Object\ get(int)
comment17.text=\n\ Gets\ the\ item\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ get\ the\ item\ from.\n\ @return\ object\ at\ the\ specified\ index.\n
comment18.params=
comment18.target=Node\ getFirst()
comment18.text=\n\ Gets\ the\ first\ node\ of\ this\ list.\n\ @return\ node\ at\ the\ head\ of\ the\ list.\n
comment19.params=start\ length
comment19.target=LinkedList\ subList(int,\ int)
comment19.text=\n\ Gets\ a\ sublist\ from\ this\ list\ at\ the\ specified\ range.\n\ @param\ start\ index\ to\ start\ the\ range\ from.\n\ @param\ length\ how\ many\ items\ should\ be\ taken\ in\ the\ sublist.\n\ @return\ linked\ list\ with\ the\ specified\ sub\ range.\n
comment2.params=item
comment2.target=void\ add(java.lang.Object)
comment2.text=\n\ Adds\ the\ specified\ item\ to\ the\ end\ of\ this\ list.\n\ @param\ item\ to\ be\ added\ to\ the\ list.\n
comment20.params=
comment20.target=java.lang.Object[]\ toArray()
comment20.text=\ \n\ Gets\ an\ array\ form\ of\ this\ list.\n\ @return\ array\ of\ all\ elements\ in\ this\ list.\n
comment21.params=
comment21.target=java.lang.String\ toString()
comment21.text=\n\ Overrides\ object's\ toString\n\ @return\ a\ string\ representation\ of\ this\ list.\n
comment22.params=item
comment22.target=void\ addFirst(java.lang.Object)
comment23.params=prev
comment23.target=java.lang.Object\ remove(Node)
comment24.params=
comment24.target=java.lang.Object\ removeFirst()
comment25.params=obj
comment25.target=Node\ find(java.lang.Object)
comment26.params=obj
comment26.target=Node\ findBefore(java.lang.Object)
comment27.params=index
comment27.target=Node\ find(int)
comment28.params=index
comment28.target=Node\ findBefore(int)
comment29.params=index
comment29.target=void\ checkRange(int)
comment3.params=index\ item
comment3.target=void\ add(int,\ java.lang.Object)
comment3.text=\n\ Adds\ the\ specified\ item\ to\ this\ list\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ add\ the\ item.\n\ @param\ item\ to\ be\ added\ to\ the\ list.\n
comment4.params=items
comment4.target=void\ addAll(java.lang.Object[])
comment4.text=\n\ Adds\ the\ list\ of\ items\ to\ the\ end\ of\ this\ list.\n\ @param\ items\ list\ of\ items\ to\ be\ added.\n
comment5.params=index\ items
comment5.target=void\ addAll(int,\ java.lang.Object[])
comment5.text=\n\ Adds\ the\ list\ of\ items\ to\ this\ list\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ add\ the\ list\ of\ items.\n\ @param\ items\ list\ of\ items\ to\ be\ added.\n
comment6.params=index\ item
comment6.target=void\ set(int,\ java.lang.Object)
comment6.text=\n\ Sets\ the\ item\ at\ the\ specified\ index\ to\ the\ specified\ item.\n\ @param\ index\ where\ to\ replace\ the\ item.\n\ @param\ item\ to\ replace\ the\ item\ at\ the\ given\ index.\n
comment7.params=item
comment7.target=void\ remove(java.lang.Object)
comment7.text=\n\ Removes\ the\ specified\ item\ from\ the\ list.\n\ @param\ item\ to\ be\ removed\ from\ the\ list.\n
comment8.params=index
comment8.target=java.lang.Object\ remove(int)
comment8.text=\n\ Removes\ the\ item\ at\ the\ specified\ index\ from\ the\ list.\n\ @param\ index\ where\ to\ remove\ the\ item\ from.\n\ @return\ object\ at\ the\ given\ index\ that\ was\ removed.\n
comment9.params=
comment9.target=java.lang.Object\ remove()
comment9.text=\n\ Removes\ the\ item\ at\ the\ end\ of\ the\ list.\n\ @return\ object\ that\ was\ previously\ at\ the\ end\ of\ the\ list.\n
numComments=30
