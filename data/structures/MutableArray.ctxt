#BlueJ class context
comment0.params=
comment0.target=MutableArray()
comment0.text=\n\ Default\ constructor\ initializes\ the\ array\ with\ a\ capacity\ of\ 32.\n
comment1.params=cap
comment1.target=MutableArray(int)
comment1.text=\n\ Overloaded\ constructor\ takes\ an\ initial\ capacity\ for\ the\ array.\n\ @param\ cap\ initial\ capacity\ for\ the\ array.\n
comment10.params=elem
comment10.target=int\ indexOf(java.lang.Object)
comment10.text=\n\ Returns\ the\ first\ occurance\ of\ the\ specified\ item\ or\ -1\ if\ it\ does\ not\ exist.\n\ @param\ elem\ the\ item\ to\ search\ for.\n\ @return\ the\ index\ where\ the\ item\ is\ found\ or\ -1\ if\ it\ is\ not\ found.\n
comment11.params=elem
comment11.target=int\ lastIndexOf(java.lang.Object)
comment11.text=\n\ Returns\ the\ last\ occurance\ of\ the\ specified\ item\ or\ -1\ if\ it\ does\ not\ exist.\n\ @param\ elem\ the\ item\ to\ search\ for.\n\ @return\ the\ last\ index\ where\ the\ item\ is\ found\ or\ -1\ if\ it\ is\ not\ found.\n
comment12.params=elem
comment12.target=boolean\ contains(java.lang.Object)
comment12.text=\n\ Returns\ whether\ the\ array\ has\ the\ specified\ item\ or\ not.\n\ @param\ elem\ item\ to\ search\ for.\n\ @return\ if\ the\ item\ was\ found.\n
comment13.params=
comment13.target=void\ trimToSize()
comment13.text=\n\ Trims\ the\ capity\ of\ the\ array\ to\ the\ current\ size\ of\ the\ array.\n
comment14.params=
comment14.target=boolean\ isEmpty()
comment14.text=\n\ Returns\ if\ the\ array\ is\ empty.\n\ @return\ if\ the\ array\ is\ empty.\n
comment15.params=
comment15.target=void\ clear()
comment15.text=\n\ Removes\ every\ element\ from\ the\ array.\n
comment16.params=
comment16.target=int\ size()
comment16.text=\n\ Gets\ the\ size\ of\ the\ array.\n\ @return\ the\ integer\ size\ of\ the\ array.\n
comment17.params=
comment17.target=int\ length()
comment17.text=\n\ Alias\ for\ size.\n\ @return\ the\ integer\ size\ of\ the\ array.\n
comment18.params=
comment18.target=int\ capacity()
comment18.text=\n\ Gets\ the\ current\ capacity\ of\ the\ array.\n\ @return\ the\ current\ capacity\ of\ the\ array.\n
comment19.params=
comment19.target=void\ ensureSize()
comment2.params=elem
comment2.target=void\ add(java.lang.Object)
comment2.text=\n\ Adds\ the\ item\ to\ the\ array\ at\ the\ next\ available\ index.\n\ @param\ elem\ item\ to\ add\ to\ the\ array.\n
comment20.params=index
comment20.target=void\ checkIndex(int)
comment3.params=index\ elem
comment3.target=void\ add(int,\ java.lang.Object)
comment3.text=\n\ Adds\ the\ item\ to\ the\ array\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ add\ the\ item.\n\ @param\ elem\ item\ to\ add\ to\ the\ array.\n
comment4.params=index\ elem
comment4.target=java.lang.Object\ set(int,\ java.lang.Object)
comment4.text=\n\ Sets\ the\ item\ at\ the\ spcified\ index\ to\ the\ specified\ item\ effectively\ replacing\ the\ old\ one.\n\ @param\ index\ where\ to\ set\ the\ item.\n\ @param\ elem\ item\ to\ add\ to\ the\ array.\n\ @return\ the\ item\ that\ was\ replaced.\n
comment5.params=
comment5.target=java.lang.Object\ remove()
comment5.text=\n\ Removes\ the\ last\ item\ in\ the\ array\ and\ returns\ it.\n\ @return\ the\ item\ that\ was\ removed.\n
comment6.params=index
comment6.target=java.lang.Object\ remove(int)
comment6.text=\n\ Removes\ the\ item\ from\ the\ array\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ remove\ the\ item\ from.\n\ @return\ the\ item\ removed\ from\ the\ array.\n
comment7.params=elem
comment7.target=boolean\ remove(java.lang.Object)
comment7.text=\n\ Removes\ the\ specified\ item\ from\ the\ list\ or\ does\ nothing\ if\ the\ item\ does\ not\ exist.\n\ @param\ elem\ the\ item\ to\ be\ removed\ from\ the\ list.\n\ @return\ if\ the\ item\ was\ successfully\ found\ and\ removed.\n
comment8.params=elem
comment8.target=void\ removeAll(java.lang.Object)
comment8.text=\n\ Removes\ every\ occurance\ of\ the\ specified\ item\ from\ the\ array.\n\ @param\ elem\ the\ item\ to\ be\ removed\ from\ the\ list.\n
comment9.params=index
comment9.target=java.lang.Object\ get(int)
comment9.text=\n\ Gets\ the\ item\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ find\ the\ item\ in\ the\ array.\n\ @return\ the\ item\ at\ the\ specified\ index.\n
numComments=21
