#BlueJ class context
comment0.params=period
comment0.target=Timer(long)
comment0.text=\n\ Constructor\ takes\ a\ cycle\ period.\n\ @param\ period\ the\ time\ between\ each\ cycle\ that\ the\ timer\ will\ attempt\ to\ hit.\n
comment1.params=timer
comment1.target=Timer(Timer)
comment1.text=\n\ Constructor\ takes\ a\ spent\ timer\ to\ reactivate\ it.\n\ @param\ timer\ the\ used\ (or\ unused\ if\ preferred)\ timer\ to\ clone.\n
comment10.params=millis
comment10.target=long\ toNano(long)
comment11.params=
comment11.target=void\ pre_execution()
comment11.text=\n\ Executes\ before\ the\ timer\ starts.\n
comment12.params=
comment12.target=void\ post_execution()
comment12.text=\n\ Executed\ after\ the\ timer\ stops.\n
comment2.params=
comment2.target=void\ start()
comment2.text=\n\ Activates\ the\ timers\ -\ this\ allows\ the\ timer\ to\ only\ be\ started\ and\ stopped\ once.\n
comment3.params=
comment3.target=void\ stop()
comment3.text=\n\ Stops\ the\ timer\ gracefully\ -\ the\ maximum\ amount\ of\ time\ it\ may\ take\ is\ equal\ to\ the\ period.\n
comment4.params=
comment4.target=void\ run()
comment4.text=\n\ The\ run\ method\ is\ used\ by\ the\ thread\ class\ to\ execute\ asynchronously.\n
comment5.params=
comment5.target=ExecutableChain\ getPrimaryChain()
comment5.text=\n\ Gets\ the\ primary\ execution\ chain.\n\ @return\ the\ primary\ execution\ chain.\n
comment6.params=
comment6.target=ExecutableChain\ getInsuredChain()
comment6.text=\n\ Gets\ the\ insured\ chain.\ The\ insured\ chain\ will\ execute\ the\ number\ of\ times\ specified\ \n\ by\ the\ period\ even\ if\ the\ machine\ cannot\ keep\ up.\ \ This\ is\ useful\ for\ game\ updates\ so\ \n\ as\ not\ to\ sacrifice\ gameplay\ to\ a\ lacking\ fps\ caused\ by\ system\ deficiencies.\n\ @return\ the\ insured\ chain.\n
comment7.params=
comment7.target=ExecutableQueue\ getQueue()
comment7.text=\n\ Gets\ the\ executable\ queue\ for\ this\ timer.\n\ @return\ the\ executable\ queue.\n
comment8.params=e
comment8.target=void\ enqueue(Executable)
comment8.text=\n\ Convenience\ methods\ adds\ to\ the\ executable\ queue.\n\ @param\ e\ executable\ to\ add\ to\ the\ queue.\n
comment9.params=nano
comment9.target=long\ toMillis(long)
numComments=13
