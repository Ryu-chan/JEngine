#BlueJ class context
comment0.params=
comment0.target=ExecutableChain()
comment0.text=\n\ Default\ constructor\ instantiates\ an\ empty\ chain.\n
comment1.params=execs
comment1.target=ExecutableChain(Executable[])
comment1.text=\n\ Second\ constructor\ takes\ an\ executable\ or\ many\ executables\ \n\ to\ add\ to\ the\ new\ chain.\n\ @param\ execs\ list\ of\ executables\ to\ add\ to\ this\ chain.\n
comment10.params=start\ length
comment10.target=Executable[]\ removeRange(int,\ int)
comment10.text=\n\ Removes\ the\ specified\ range\ of\ executables\ from\ the\ chain.\n\ @param\ start\ index\ to\ start\ the\ range\ from.\n\ @param\ length\ how\ many\ executables\ should\ be\ removed.\n\ @return\ an\ array\ of\ the\ specified\ length\ with\ the\ removed\ executables.\n
comment11.params=
comment11.target=boolean\ isEmpty()
comment11.text=\n\ Gets\ if\ the\ chain\ is\ empty.\n\ @return\ if\ the\ chain\ is\ empty.\n
comment12.params=
comment12.target=int\ size()
comment12.text=\n\ Gets\ the\ size\ of\ the\ chain.\n\ @return\ the\ size\ of\ the\ chain.\n
comment13.params=
comment13.target=void\ clear()
comment13.text=\n\ Clears\ the\ chain.\n
comment14.params=exec
comment14.target=boolean\ contains(Executable)
comment14.text=\n\ Returns\ if\ the\ specified\ executable\ occurs\ in\ the\ chain.\n\ @param\ exec\ which\ executable\ to\ look\ for.\n\ @return\ if\ the\ executable\ occurs\ in\ the\ chain.\n
comment15.params=exec
comment15.target=int\ indexOf(Executable)
comment15.text=\n\ Gets\ the\ index\ of\ the\ specified\ executable\ if\ it\ exists.\n\ @param\ exec\ which\ executable\ to\ find\ the\ index\ of.\n\ @return\ the\ index\ of\ the\ item\ or\ -1.\n
comment16.params=exec
comment16.target=int\ lastIndexOf(Executable)
comment16.text=\n\ Gets\ the\ last\ index\ of\ the\ specified\ item.\n\ @param\ exec\ which\ executable\ to\ find\ the\ last\ index\ of.\n\ @return\ the\ last\ index\ of\ the\ executable\ or\ -1.\n
comment17.params=index
comment17.target=Executable\ get(int)
comment17.text=\n\ Gets\ the\ item\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ get\ the\ executable\ from.\n\ @return\ executable\ at\ the\ specified\ index.\n
comment18.params=
comment18.target=engine.data.LinkedList\ getChain()
comment18.text=\n\ Gets\ the\ linked\ list\ maintained\ by\ this\ class.\n\ @return\ the\ chain.\n
comment19.params=
comment19.target=void\ execute()
comment19.text=\n\ Executes\ the\ first\ item\ in\ the\ chain.\n
comment2.params=exec
comment2.target=void\ add(Executable)
comment2.text=\n\ Adds\ the\ specified\ executable\ to\ the\ end\ of\ the\ chain.\n\ @param\ exec\ to\ be\ added\ to\ the\ chain.\n
comment20.params=
comment20.target=void\ executeAll()
comment20.text=\n\ Executes\ all\ items\ in\ the\ chain.\n
comment3.params=index\ exec
comment3.target=void\ add(int,\ Executable)
comment3.text=\n\ Adds\ the\ specified\ executable\ to\ the\ chain\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ add\ the\ executable.\n\ @param\ exec\ to\ be\ added\ to\ the\ chain.\n
comment4.params=execs
comment4.target=void\ addAll(Executable[])
comment4.text=\n\ Adds\ the\ list\ of\ executables\ to\ the\ end\ of\ the\ chain.\n\ @param\ execs\ list\ of\ executables\ to\ be\ added.\n
comment5.params=index\ execs
comment5.target=void\ addAll(int,\ Executable[])
comment5.text=\n\ Adds\ the\ list\ of\ executables\ to\ the\ chain\ at\ the\ specified\ index.\n\ @param\ index\ where\ to\ add\ the\ list\ of\ executables.\n\ @param\ execs\ list\ of\ executables\ to\ be\ added.\n
comment6.params=index\ exec
comment6.target=void\ set(int,\ Executable)
comment6.text=\n\ Sets\ the\ executable\ at\ the\ specified\ index\ to\ the\ specified\ executable.\n\ @param\ index\ where\ to\ replace\ the\ executable.\n\ @param\ exec\ to\ replace\ the\ executable\ at\ the\ given\ index.\n
comment7.params=exec
comment7.target=void\ remove(Executable)
comment7.text=\n\ Removes\ the\ specified\ executable\ from\ the\ chain.\n\ @param\ exec\ to\ be\ removed\ from\ the\ chain.\n
comment8.params=index
comment8.target=Executable\ remove(int)
comment8.text=\n\ Removes\ the\ executable\ at\ the\ specified\ index\ from\ the\ chain.\n\ @param\ index\ where\ to\ remove\ the\ executable\ from.\n\ @return\ executable\ at\ the\ given\ index\ that\ was\ removed.\n
comment9.params=
comment9.target=Executable\ remove()
comment9.text=\n\ Removes\ the\ item\ at\ the\ end\ of\ the\ chain.\n\ @param\ executable\ that\ was\ at\ the\ end\ of\ the\ chain.\n
numComments=21
