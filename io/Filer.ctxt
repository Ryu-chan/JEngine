#BlueJ class context
comment0.params=encoding
comment0.target=void\ changeDefaultEncoding(java.nio.charset.Charset)
comment0.text=\r\n\ Changes\ the\ default\ encoding\ to\ be\ used\ when\ no\ charset\ is\ provided.\r\n\ @param\ encoding\ specifies\ the\ new\ default\ charset\ for\ encoding.\r\n
comment1.params=file
comment1.target=java.util.List\ readSmallTextFile(java.lang.String)
comment1.text=\r\n\ Reads\ quickly\ a\ small\ text\ file\ with\ the\ default\ encoding\ -\ not\ recommended\ for\ larger\ files.\ \r\n\ Use\ {@link\ readLargeTextFile(String)}\ instead.\r\n\ @param\ file\ name\ of\ the\ file\ to\ read\ from.\r\n\ @return\ a\ list\ of\ strings\ where\ each\ string\ in\ the\ file\ was\ separated\ by\ a\ newline\ character.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment2.params=file\ encoding
comment2.target=java.util.List\ readSmallTextFile(java.lang.String,\ java.nio.charset.Charset)
comment2.text=\r\n\ Reads\ quickly\ a\ small\ text\ file\ with\ the\ specified\ encoding\ -\ not\ recommended\ for\ larger\ files.\ \r\n\ Use\ {@link\ readLargeTextFile(String,Charset)}\ instead.\r\n\ @param\ file\ name\ of\ the\ file\ to\ read\ from.\r\n\ @param\ encoding\ specifies\ what\ type\ of\ encoding\ to\ use\ when\ reading\ the\ file.\r\n\ @return\ a\ list\ of\ strings\ where\ each\ string\ in\ the\ file\ was\ separated\ by\ a\ newline\ character.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment3.params=file
comment3.target=java.util.List\ readLargeTextFile(java.lang.String)
comment3.text=\r\n\ Reads\ large\ a\ text\ file\ with\ the\ default\ encoding.\r\n\ @param\ file\ name\ of\ the\ file\ to\ read\ from.\r\n\ @return\ a\ list\ of\ strings\ where\ each\ string\ in\ the\ file\ was\ separated\ by\ a\ newline\ character.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment4.params=file\ encoding
comment4.target=java.util.List\ readLargeTextFile(java.lang.String,\ java.nio.charset.Charset)
comment4.text=\r\n\ Reads\ large\ a\ text\ file\ with\ the\ specified\ encoding.\r\n\ @param\ file\ name\ of\ the\ file\ to\ read\ from.\r\n\ @param\ encoding\ specifies\ what\ type\ of\ encoding\ to\ use\ when\ reading\ the\ file.\r\n\ @return\ a\ list\ of\ strings\ where\ each\ string\ in\ the\ file\ was\ separated\ by\ a\ newline\ character.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment5.params=file\ lines
comment5.target=void\ writeSmallTextFile(java.lang.String,\ java.util.List)
comment5.text=\r\n\ Writes\ quickly\ to\ a\ small\ text\ file\ with\ the\ default\ encoding\ -\ not\ recommended\ for\ larger\ files.\ \r\n\ Use\ {@link\ writeLargeTextFile(String,List)}\ instead.\r\n\ @param\ file\ name\ of\ the\ file\ to\ write\ to.\r\n\ @param\ lines\ a\ list\ of\ strings\ where\ each\ string\ will\ be\ separated\ by\ a\ newline\ character.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment6.params=file\ lines\ encoding
comment6.target=void\ writeSmallTextFile(java.lang.String,\ java.util.List,\ java.nio.charset.Charset)
comment6.text=\r\n\ Writes\ quickly\ to\ a\ small\ text\ file\ with\ the\ specified\ encoding\ -\ not\ recommended\ for\ larger\ files.\ \r\n\ Use\ {@link\ writeLargeTextFile(String,List,Charset)}\ instead.\r\n\ @param\ file\ name\ of\ the\ file\ to\ write\ to.\r\n\ @param\ lines\ a\ list\ of\ strings\ where\ each\ string\ will\ be\ separated\ by\ a\ newline\ character.\r\n\ @param\ encoding\ specifies\ what\ type\ of\ encoding\ to\ use\ when\ writing\ the\ file.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment7.params=file\ lines
comment7.target=void\ writeLargeTextFile(java.lang.String,\ java.util.List)
comment7.text=\r\n\ Writes\ to\ large\ a\ text\ file\ with\ the\ default\ encoding.\r\n\ @param\ file\ name\ of\ the\ file\ to\ read\ from.\r\n\ @param\ lines\ a\ list\ of\ strings\ where\ each\ string\ will\ be\ separated\ by\ a\ newline\ character.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
comment8.params=file\ lines\ encoding
comment8.target=void\ writeLargeTextFile(java.lang.String,\ java.util.List,\ java.nio.charset.Charset)
comment8.text=\r\n\ Writes\ to\ large\ a\ text\ file\ with\ the\ specified\ encoding.\r\n\ @param\ file\ name\ of\ the\ file\ to\ read\ from.\r\n\ @param\ lines\ a\ list\ of\ strings\ where\ each\ string\ will\ be\ separated\ by\ a\ newline\ character.\r\n\ @param\ encoding\ specifies\ what\ type\ of\ encoding\ to\ use\ when\ writing\ the\ file.\r\n\ @throws\ IOException\ if\ the\ specified\ file\ does\ not\ exist\ or\ cannot\ be\ accessed.\r\n
numComments=9
